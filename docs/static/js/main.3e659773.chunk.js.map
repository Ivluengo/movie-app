{"version":3,"sources":["components/AddMovie.tsx","helpers/getMovies.tsx","components/MovieGridItem.tsx","components/MovieGrid.tsx","MovieApp.tsx","index.tsx"],"names":["AddMovie","setNewQuery","useState","inputText","setInputText","className","onSubmit","e","preventDefault","trim","length","type","placeholder","onChange","target","value","getMovies","movieQuery","a","fetch","encodeURI","resp","json","results","console","log","movies","map","movie","id","title","nota","vote_average","resumen","overview","fechaEstreno","release_date","poster","poster_path","backdrop","backdrop_path","MovieGridItem","allMovies","src","alt","substr","MovieGrid","setAllMovies","useEffect","then","style","backgroundImage","backgroundSize","MovieApp","newQuery","uniqid","ReactDOM","document","getElementById"],"mappings":"mNAoCeA,EA9B2B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACzBC,mBAAS,IADgB,mBACpDC,EADoD,KACzCC,EADyC,KAe3D,OACI,8BACI,uBAAMC,UAAU,gCAAgCC,SAdnC,SAACC,GAClBA,EAAEC,iBACEL,EAAUM,OAAOC,OAAS,GAC1BT,EAAYE,GAEhBC,EAAa,KAST,UACI,uBACIO,KAAK,OACLC,YAAY,6BACZC,SAVU,SAACN,GACvBH,EAAaG,EAAEO,OAAOC,QAUVA,MAAOZ,IAEX,wBAAQE,UAAU,iCAAlB,0B,uCCpBHW,EAAS,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DACT,mCADS,SAEFC,MAAM,qDAAD,OADZ,mCACY,kBAC8CC,UAAUH,KAH3D,cAEfI,EAFe,gBAKKA,EAAKC,OALV,uBAKbC,EALa,EAKbA,QACRC,QAAQC,IAAIF,GAENG,EAAsBH,EAAQI,KAChC,SAACC,GACG,MAAO,CACHC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MACbC,KAAMH,EAAMI,aACZC,QAASL,EAAMM,SACfC,aAAcP,EAAMQ,aACpBC,OAAQT,EAAMU,YAAN,0CACiCV,EAAMU,aACzC,gBACNC,SAAUX,EAAMY,cAAN,2CACgCZ,EAAMY,eAC1C,sBArBG,kBA0Bdd,GA1Bc,4CAAH,sDC2BPe,EA/BqC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnD,OACI,qBAAKrC,UAAU,wBAAf,gBACKqC,QADL,IACKA,OADL,EACKA,EAAWf,KAAI,SAACC,GACb,MACqB,kBAAjBA,EAAMS,QACF,sBAEIhC,UAAU,gDAFd,UAII,qBACIA,UAAU,8BACVsC,IAAKf,EAAMS,OACXO,IAAKhB,EAAME,QAEf,6BAAKF,EAAME,QACX,uBAAOzB,UAAU,yDAAjB,SACKuB,EAAMG,OAEX,oBAAG1B,UAAU,QAAb,0BAAyBuB,EAAMO,gBAC/B,mBAAG9B,UAAU,mBAAb,SACKuB,EAAMK,QAAQY,OAAO,EAAG,IAAM,UAd9BjB,EAAMC,UC0CxBiB,EA/C6B,SAAC,GAAoB,IAAD,EAAjB7B,EAAiB,EAAjBA,WAAiB,EAC1Bf,mBAAsB,IADI,mBACrDwC,EADqD,KAC1CK,EAD0C,KAO5D,OAJAC,qBAAU,WACNhC,EAAUC,GAAYgC,MAAK,SAACvB,GAAD,OAAYqB,EAAarB,QACrD,CAACT,IAGA,sBACIZ,UAAU,oBACV6C,OACI,UAAAR,EAAU,UAAV,eAAcH,UACR,CACIY,gBAAgB,gHAAD,OAAkHT,EAAU,GAAGH,SAA/H,KACfa,eAAgB,SAEpB,GARd,UAWI,oBAAI/C,UAAU,YAAd,SACI,sBAAMA,UAAU,0BAAhB,SAA2CY,MAG/C,cAAC,EAAD,CAAeyB,UAAWA,QCdvBW,EAZY,WAAO,IAAD,EACGnD,mBAAS,UADZ,mBACtBoD,EADsB,KACZrD,EADY,KAG7B,OACI,sBAAKI,UAAU,QAAf,UACI,oBAAIA,UAAU,cAAd,sBACA,cAAC,EAAD,CAAUJ,YAAaA,IACvB,cAAC,EAAD,CAAWgB,WAAYqC,GAAeC,OAH1C,Q,kBCFRC,SAAgB,cAAC,EAAD,IAAcC,SAASC,eAAe,W","file":"static/js/main.3e659773.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\ninterface AddMovieProps {\r\n    setNewQuery: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst AddMovie: React.FC<AddMovieProps> = ({ setNewQuery }) => {\r\n    const [inputText, setInputText] = useState('');\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (inputText.trim().length > 2) {\r\n            setNewQuery(inputText);\r\n        }\r\n        setInputText('');\r\n    };\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputText(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className='row flex gap-8 justify-center' onSubmit={handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    placeholder='Â¡Busca una pelÃ­cula!'\r\n                    onChange={handleInputChange}\r\n                    value={inputText}\r\n                />\r\n                <button className='bg-red-400 text-white border-0'>Buscar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddMovie;\r\n","export interface MovieItem {\r\n    id: string;\r\n    title: string;\r\n    nota: number;\r\n    resumen: string;\r\n    fechaEstreno: string;\r\n    poster: string;\r\n    backdrop: string;\r\n}\r\n\r\nexport const getMovies = async (movieQuery: string) => {\r\n    const api = '594939a196832017634a0d7b0271311b';\r\n    const resp = await fetch(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=${api}&query=${encodeURI(movieQuery)}`\r\n    );\r\n    const { results } = await resp.json();\r\n    console.log(results);\r\n\r\n    const movies: MovieItem[] = results.map(\r\n        (movie: any): MovieItem => {\r\n            return {\r\n                id: movie.id,\r\n                title: movie.title,\r\n                nota: movie.vote_average,\r\n                resumen: movie.overview,\r\n                fechaEstreno: movie.release_date,\r\n                poster: movie.poster_path\r\n                    ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\r\n                    : 'No hay poster',\r\n                backdrop: movie.backdrop_path\r\n                    ? `https://image.tmdb.org/t/p/w1280/${movie.backdrop_path}`\r\n                    : 'No hay backdrop',\r\n            };\r\n        }\r\n    );\r\n\r\n    return movies;\r\n};\r\n","import { MovieItem } from '../helpers/getMovies';\r\n\r\ninterface MovieGridItemProps {\r\n    allMovies: MovieItem[];\r\n}\r\n\r\nconst MovieGridItem: React.FC<MovieGridItemProps> = ({ allMovies }) => {\r\n    return (\r\n        <div className='gridImages grid gap-8'>\r\n            {allMovies?.map((movie) => {\r\n                return (\r\n                    movie.poster !== 'No hay poster' && (\r\n                        <div\r\n                            key={movie.id}\r\n                            className='movieItem text-center p-5 bg-white rounded-md'\r\n                        >\r\n                            <img\r\n                                className='u-max-full-width rounded-xl'\r\n                                src={movie.poster}\r\n                                alt={movie.title}\r\n                            />\r\n                            <h5>{movie.title}</h5>\r\n                            <small className='nota bg-yellow-400 p-3 rounded-full font-bold text-2xl'>\r\n                                {movie.nota}\r\n                            </small>\r\n                            <p className='-ml-2'>ðŸ“… {movie.fechaEstreno}</p>\r\n                            <p className='descripcion mb-2'>\r\n                                {movie.resumen.substr(0, 80) + '...'}\r\n                            </p>\r\n                        </div>\r\n                    )\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieGridItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getMovies, MovieItem } from './../helpers/getMovies';\r\nimport MovieGridItem from './MovieGridItem';\r\n\r\ninterface MovieGridProps {\r\n    movieQuery: string;\r\n}\r\n\r\nconst MovieGrid: React.FC<MovieGridProps> = ({ movieQuery }) => {\r\n    const [allMovies, setAllMovies] = useState<MovieItem[]>([]);\r\n\r\n    useEffect(() => {\r\n        getMovies(movieQuery).then((movies) => setAllMovies(movies));\r\n    }, [movieQuery]);\r\n\r\n    return (\r\n        <div\r\n            className='mb-12 py-36 px-24'\r\n            style={\r\n                allMovies[0]?.backdrop\r\n                    ? {\r\n                          backgroundImage: `linear-gradient(to bottom,rgba(243, 244, 246) 0%, transparent 5%, transparent 95%, rgba(243, 244, 246)) ,url(${allMovies[0].backdrop})`,\r\n                          backgroundSize: 'cover',\r\n                      }\r\n                    : {}\r\n            }\r\n        >\r\n            <h2 className='gridTitle'>\r\n                <span className='bg-white p-4 rounded-md'>{movieQuery}</span>\r\n            </h2>\r\n\r\n            <MovieGridItem allMovies={allMovies} />\r\n            {/* <div\r\n                className='gridImages grid gap-8'\r\n                style={{ gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))' }}\r\n            >\r\n                {allMovies?.map((movie) => {\r\n                    return (\r\n                        movie.poster !== 'No hay poster' && (\r\n                            <div key={movie.id} className='text-center p-5 bg-white rounded-md'>\r\n                                <h5>{movie.title}</h5>\r\n                                <img\r\n                                    className='u-max-full-width rounded-xl'\r\n                                    src={movie.poster}\r\n                                    alt={movie.title}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    );\r\n                })}\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieGrid;\r\n","import { useState } from 'react';\nimport AddMovie from './components/AddMovie';\nimport uniqid from 'uniqid';\nimport MovieGrid from './components/MovieGrid';\n\nconst MovieApp: React.FC = () => {\n    const [newQuery, setNewQuery] = useState('Matrix');\n\n    return (\n        <div className='mt-24'>\n            <h1 className='text-center'>MovieApp</h1>\n            <AddMovie setNewQuery={setNewQuery} />\n            <MovieGrid movieQuery={newQuery} key={uniqid()} />;\n        </div>\n    );\n};\n\nexport default MovieApp;\n","import * as ReactDOM from 'react-dom';\nimport MovieApp from './MovieApp';\n\nimport './styles/normalize.css';\nimport './styles/mine.css';\nimport './styles/index.css';\n\nReactDOM.render(<MovieApp />, document.getElementById('root'));\n"],"sourceRoot":""}